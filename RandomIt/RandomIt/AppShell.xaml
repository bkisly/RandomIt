<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:views="clr-namespace:RandomIt.Views"
       Title="RandomIt"
       x:Class="RandomIt.AppShell">

    <FlyoutItem Title="Random number">
        <ShellContent Route="TestPage" ContentTemplate="{DataTemplate views:RandomNumberPage}"/>
    </FlyoutItem>
    <FlyoutItem Title="Random string">
        <ShellContent Route="TestPage" ContentTemplate="{DataTemplate views:RandomStringPage}"/>
    </FlyoutItem>
    <FlyoutItem Title="Random list element">
        <ShellContent Route="TestPage" ContentTemplate="{DataTemplate views:RandomListElementPage}"/>
    </FlyoutItem>
    <FlyoutItem Title="List shuffle">
        <ShellContent Route="TestPage" ContentTemplate="{DataTemplate views:ListShufflePage}"/>
    </FlyoutItem>
    <FlyoutItem Title="Dice">
        <ShellContent Route="TestPage" ContentTemplate="{DataTemplate views:DicePage}"/>
    </FlyoutItem>
    <FlyoutItem Title="Coin flip">
        <ShellContent Route="TestPage" ContentTemplate="{DataTemplate views:CoinFlipPage}"/>
    </FlyoutItem>

    
    <!--
    <FlyoutItem Title="About" Icon="icon_about.png">
        <ShellContent Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Browse" Icon="icon_feed.png">
        <ShellContent Route="ItemsPage" ContentTemplate="{DataTemplate local:ItemsPage}" />
    </FlyoutItem>
    -->

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <!--
    <MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>
    -->

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <!--
    <TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>
    -->

</Shell>
